 node {
 withEnv(["AZURE_SUBSCRIPTION_ID=154ee7ad-4c78-4b1f-97d5-8c534ec45bd6",
         "AZURE_TENANT_ID=72f988bf-86f1-41af-91ab-2d7cd011db47",
         "ACR_ADDRESS=xshiacr.azurecr.io",
         "BUILD_BUILDID=${env.BUILD_NUMBER}"]) {
     stage('Init') {
         cleanWs()
         checkout scm
     }

     stage('Build IoT Edge Modules') {
         withEnv(['PATH+EXTRA=/var/lib/jenkins/.local/bin/']) {
             sh '''
                 iotedgedev build
             '''
         }
     }

     stage('Publish IoT Edge Modules') {
         // login Azure
         withCredentials([usernamePassword(credentialsId: 'AzureServicePrincipal', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID'), usernamePassword(credentialsId: 'AzureContainerRegistry', passwordVariable: 'ACR_USERNAME', usernameVariable: 'ACR_PASSWORD')]) {
         sh '''
             az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
             az account set -s $AZURE_SUBSCRIPTION_ID
             az acr login -n $ACR_ADDRESS -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRE
         '''
         }
         sh 'iotedgedev push'
         }
     }
     
     stage('Create IoT Edge Deployment')
        withCredentials([string(credentialsId: 'IotHubConnectionString', variable: 'IOTHUB_CONNECTION_STRING'), string(credentialsId: 'DeviceConnectionString', variable: 'DEVICE_CONNECTION_STRING')]) {
        sh 'iotedgedev deploy'
        }
 }
